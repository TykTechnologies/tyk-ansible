---
- name: Gather RedHat based systems' specific variables
  include_vars: "redhat.yaml"
  when:
    ansible_distribution == "RedHat" or
    ansible_distribution == "CentOS" or
    ansible_distribution == "Amazon"

- name: Gather Debian based systems' specific variables
  include_vars: "debian.yaml"
  when:
    ansible_distribution == "Debian" or
    ansible_distribution == "Ubuntu"

- name: Add tyk-dashboard public key to verify package
  apt_key:
    url: https://packagecloud.io/tyk/tyk-dashboard/gpgkey
    state: present
  when:
    ansible_distribution == "Ubuntu" or
    ansible_distribution == "Debian"

- name: Install tyk-dashboard required packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ required_packages }}"

- name: "Copy {{ package_def_file }}"
  template:
    src: "../files/{{ package_def_file }}"
    dest: "{{ package_def_folder }}/{{ package_def_file }}"

- name: Inject Tyk environment varibales into /etc/sysconfig/tyk-dashboard
  vars:
    gh: "{{ hostvars['gateway']['ansible_host'] if gateway.service.host == None else gateway.service.host }}"
    mh: "{{ hostvars['mongodb']['ansible_host'] if mongo.host == None else mongo.host }}"
    rh: "{{ hostvars['redis']['ansible_host'] if redis.host == None else redis.host }}"
  lineinfile:
    dest: /etc/sysconfig/tyk-dashboard
    create: true
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^TYK_DB_LICENSEKEY=",                      line: "TYK_DB_LICENSEKEY={{ dash.license }}" }
    - { regexp: "^TYK_DB_LISTENPORT=",                      line: "TYK_DB_LISTENPORT={{ dash.service.port }}" }
    - { regexp: "^TYK_DB_TYKAPI_HOST=",                     line: "TYK_DB_TYKAPI_HOST={{ gateway.service.proto }}://{{ gh }}" }
    - { regexp: "^TYK_DB_TYKAPI_PORT=",                     line: "TYK_DB_TYKAPI_PORT={{ gateway.service.port }}" }
    - { regexp: "^TYK_DB_TYKAPI_SECRET=",                   line: "TYK_DB_TYKAPI_SECRET={{ secrets.APISecret }}" }
    - { regexp: "^TYK_DB_ADMINSECRET=",                     line: "TYK_DB_ADMINSECRET={{ secrets.AdminSecret }}" }
    - { regexp: "^TYK_DB_NODESECRET=",                      line: "TYK_DB_NODESECRET={{ secrets.APISecret }}" }
    - { regexp: "^TYK_DB_MONGOURL=",                        line: "TYK_DB_MONGOURL=mongodb://{{ mh }}:{{ mongo.port }}/tyk_analytics" }
    - { regexp: "^TYK_DB_MONGOUSESSL=",                     line: "TYK_DB_MONGOUSESSL={{ mongo.tls }}" }
    - { regexp: "^TYK_DB_HOSTCONFIG_HOSTNAME=",             line: "TYK_DB_HOSTCONFIG_HOSTNAME={{ gh }}" }
    - { regexp: "^TYK_DB_HOSTCONFIG_GATEWAYHOSTNAME=",      line: "TYK_DB_HOSTCONFIG_GATEWAYHOSTNAME={{ gh }}:{{ gateway.service.port }}" }
    - { regexp: "^TYK_DB_REDISHOST=",                       line: "TYK_DB_REDISHOST={{ rh }}" }
    - { regexp: "^TYK_DB_REDISPORT=",                       line: "TYK_DB_REDISPORT={{ redis.port }}" }
    - { regexp: "^TYK_DB_REDISPASSWORD=",                   line: "TYK_DB_REDISPASSWORD={{ redis.pass }}" }
    - { regexp: "^TYK_DB_ENABLECLUSTER=",                   line: "TYK_DB_ENABLECLUSTER={{ redis.enableCluster }}" }
    - { regexp: "^TYK_DB_REDISUSESSL=",                     line: "TYK_DB_REDISUSESSL={{ redis.tls }}" }
    - { regexp: "^TYK_DB_REDISDATABASE=",                   line: "TYK_DB_REDISDATABASE={{ redis.storage.database }}" }
    - { regexp: "^TYK_DB_HOSTCONFIG_ENABLEHOSTNAMES=",      line: "TYK_DB_HOSTCONFIG_ENABLEHOSTNAMES=True" }
    - { regexp: "^TYK_DB_HOSTCONFIG_PORTALROOTPATH=",       line: "TYK_DB_HOSTCONFIG_PORTALROOTPATH=/portal" }
    - { regexp: "^TYK_DB_HTTPSERVEROPTIONS_USESSL=",        line: "TYK_DB_HTTPSERVEROPTIONS_USESSL={{ dash.service.tls }}" }
    - { regexp: "^TYK_DB_HASHKEYS=",                        line: "TYK_DB_HASHKEYS=True" }
    - { regexp: "^TYK_DB_HIDELISTENPATH=",                  line: "TYK_DB_HIDELISTENPATH=False" }
    - { regexp: "^TYK_DB_ENABLEMASTERKEYS=",                line: "TYK_DB_ENABLEMASTERKEYS=False" }
    - { regexp: "^TYK_DB_ENABLEDUPLICATESLUGS=",            line: "TYK_DB_ENABLEDUPLICATESLUGS=True" }
    - { regexp: "^TYK_DB_HOSTCONFIG_DISABLEORGSLUGPREFIX=", line: "TYK_DB_HOSTCONFIG_DISABLEORGSLUGPREFIX=True" }
    - { regexp: "^TYK_DB_SHOWORGID=",                       line: "TYK_DB_SHOWORGID=True" }
    - { regexp: "^TYK_DB_HOMEDIR=",                         line: "TYK_DB_HOMEDIR=/opt/tyk-dashboard" }
    - { regexp: "^TYK_DB_ALLOWEXPLICITPOLICYID=",           line: "TYK_DB_ALLOWEXPLICITPOLICYID=True" }

- name: Install tyk-dashboard
  package:
    name: tyk-dashboard
    state: present
    update_cache: yes

- name: Enable tyk-dashboard
  service:
    name: tyk-dashboard
    state: started
    enabled: yes
