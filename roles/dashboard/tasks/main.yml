---
- name: Gather RedHat based systems' specific variables
  include_vars: "redhat.yml"
  when:
    ansible_distribution == "RedHat" or
    ansible_distribution == "CentOS" or
    ansible_distribution == "Amazon"

- name: Gather Debian based systems' specific variables
  include_vars: "debian.yml"
  when:
    ansible_distribution == "Debian" or
    ansible_distribution == "Ubuntu"

- name: Add tyk-dashboard public key to verify package
  apt_key:
    url: https://packagecloud.io/tyk/tyk-dashboard/gpgkey
    state: present
  when:
    ansible_distribution == "Ubuntu" or
    ansible_distribution == "Debian"

- name: Install tyk-dashboard required packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ required_packages }}"

- name: "Copy {{ package_def_file }}"
  template:
    src: "../files/{{ package_def_file }}"
    dest: "{{ package_def_folder }}/{{ package_def_file }}"

- name: Install tyk-dashboard
  package:
    name: tyk-dashboard
    state: present
    update_cache: yes

- name: Copying tyk-dashboard config
  template:
    src: ../files/tyk_analytics.conf
    dest: /opt/tyk-dashboard/tyk_analytics.conf

- name: Inject Tyk environment varibales into /etc/sysconfig/tyk-dashboard
  vars:
    gh: "{{ hostvars['gateway']['ansible_host'] if gateway_host == None else gateway_host }}"
    mh: "{{ hostvars['mongodb']['ansible_host'] if mongodb_host == None else mongodb_host }}"
    rh: "{{ hostvars['redis']['ansible_host'] if redis_host == None else redis_host }}"

  lineinfile:
    dest: /etc/sysconfig/tyk-dashboard
    create: true
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^TYK_DB_LISTENPORT=",                  line: "TYK_DB_LISTENPORT={{ dashboard_port }}"}
    - { regexp: "^TYK_DB_TYKAPI_HOST=",                 line: "TYK_DB_TYKAPI_HOST={{ gateway_protocol }}://{{ gh }}"}
    - { regexp: "^TYK_DB_TYKAPI_PORT=",                 line: "TYK_DB_TYKAPI_PORT={{ gateway_port }}"}
    - { regexp: "^TYK_DB_MONGOURL=",                    line: "TYK_DB_MONGOURL=mongodb://{{ mh }}:{{ mongodb_port }}/tyk_analytics"}
    - { regexp: "^TYK_DB_HOSTCONFIG_HOSTNAME=",         line: "TYK_DB_HOSTCONFIG_HOSTNAME={{ gh }}"}
    - { regexp: "^TYK_DB_HOSTCONFIG_GATEWAYHOSTNAME=",  line: "TYK_DB_HOSTCONFIG_GATEWAYHOSTNAME={{ gh }}:{{ gateway_port }}"}
    - { regexp: "^TYK_DB_REDISHOST=",                   line: "TYK_DB_REDISHOST={{ rh }}"}
    - { regexp: "^TYK_DB_REDISPORT=",                   line: "TYK_DB_REDISPORT={{ redis_port }}"}
    - { regexp: "^TYK_DB_ENABLECLUSTER=",               line: "TYK_DB_ENABLECLUSTER={{ redis_enable_cluster }}"}
    - { regexp: "^TYK_DB_REDISUSESSL=",                 line: "TYK_DB_REDISUSESSL={{ redis_enable_ssl }}"}

- name: Enable tyk-dashboard
  service:
    name: tyk-dashboard
    state: started
    enabled: yes
