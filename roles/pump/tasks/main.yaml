---
- name: Gather RedHat based systems' specific variables
  include_vars: "redhat.yaml"
  when:
    ansible_distribution == "RedHat" or
    ansible_distribution == "CentOS" or
    ansible_distribution == "Amazon"

- name: Gather Debian based systems' specific variables
  include_vars: "debian.yaml"
  when:
    ansible_distribution == "Debian" or
    ansible_distribution == "Ubuntu"

- name: Add tyk-pump public key to verify package
  apt_key:
    url: https://packagecloud.io/tyk/tyk-pump/gpgkey
    state: present
  when:
    ansible_distribution == "Ubuntu" or
    ansible_distribution == "Debian"

- name: Install tyk-pump required packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ required_packages }}"

- name: "Copy {{ package_def_file }}"
  template:
    src: "../files/{{ package_def_file }}"
    dest: "{{ package_def_folder }}/{{ package_def_file }}"

- name: Install tyk-pump
  package:
    name: tyk-pump
    state: present
    update_cache: yes

- name: Inject Tyk environment varibales into /etc/sysconfig/tyk-pump
  vars:
    mh: "{{ hostvars['mongodb']['ansible_host'] if mongodb_host == None else mongodb_host }}"
    rh: "{{ hostvars['redis']['ansible_host'] if redis_host == None else redis_host }}"
  lineinfile:
    dest: /etc/sysconfig/tyk-pump
    create: true
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^TYK_PMP_OMITCONFIGFILE=",                           line: "TYK_PMP_OMITCONFIGFILE=true"}
    - { regexp: "^TYK_PMP_ANALYTICSSTORAGETYPE=",                     line: "TYK_PMP_ANALYTICSSTORAGETYPE=redis"}
    - { regexp: "^TYK_PMP_ANALYTICSSTORAGECONFIG_TYPE=",              line: "TYK_PMP_ANALYTICSSTORAGECONFIG_TYPE=redis"}
    - { regexp: "^TYK_PMP_ANALYTICSSTORAGECONFIG_HOST=",              line: "TYK_PMP_ANALYTICSSTORAGECONFIG_HOST={{ rh }}"}
    - { regexp: "^TYK_PMP_ANALYTICSSTORAGECONFIG_PORT=",              line: "TYK_PMP_ANALYTICSSTORAGECONFIG_PORT={{ redis_port }}"}
    - { regexp: "^TYK_PMP_ANALYTICSSTORAGECONFIG_HOSTS=",             line: "TYK_PMP_ANALYTICSSTORAGECONFIG_HOSTS="}
    - { regexp: "^TYK_PMP_ANALYTICSSTORAGECONFIG_USERNAME=",          line: "TYK_PMP_ANALYTICSSTORAGECONFIG_USERNAME="}
    - { regexp: "^TYK_PMP_ANALYTICSSTORAGECONFIG_PASSWORD=",          line: "TYK_PMP_ANALYTICSSTORAGECONFIG_PASSWORD="}
    - { regexp: "^TYK_PMP_ANALYTICSSTORAGECONFIG_DATABASE=",          line: "TYK_PMP_ANALYTICSSTORAGECONFIG_DATABASE=0"}
    - { regexp: "^TYK_PMP_ANALYTICSSTORAGECONFIG_MAXIDLE=",           line: "TYK_PMP_ANALYTICSSTORAGECONFIG_MAXIDLE=100"}
    - { regexp: "^TYK_PMP_ANALYTICSSTORAGECONFIG_MAXACTIVE=",         line: "TYK_PMP_ANALYTICSSTORAGECONFIG_MAXACTIVE=100"}
    - { regexp: "^TYK_PMP_ANALYTICSSTORAGECONFIG_ENABLECLUSTER=",     line: "TYK_PMP_ANALYTICSSTORAGECONFIG_ENABLECLUSTER={{ redis_enable_cluster }}"}
    - { regexp: "^TYK_PMP_ANALYTICSSTORAGECONFIG_REDISUSESSL=",       line: "TYK_PMP_ANALYTICSSTORAGECONFIG_REDISUSESSL={{ redis_enable_ssl }}"}
    - { regexp: "^TYK_PMP_PURGEDELAY=",                               line: "TYK_PMP_PURGEDELAY=2"}
    - { regexp: "^TYK_PMP_PUMPS_MONGO_TYPE=",                         line: "TYK_PMP_PUMPS_MONGO_TYPE=mongo"}
    - { regexp: "^TYK_PMP_PUMPS_MONGO_META_COLLECTIONNAME=",          line: "TYK_PMP_PUMPS_MONGO_META_COLLECTIONNAME=tyk_analytics"}
    - { regexp: "^TYK_PMP_PUMPS_MONGO_META_MONGOURL=",                line: "TYK_PMP_PUMPS_MONGO_META_MONGOURL=mongodb://tyk-mongo:27017/tyk_analytics"}
    - { regexp: "^TYK_PMP_PUMPS_MONGO_META_MAXINSERTBATCHSIZEBYTES=", line: "TYK_PMP_PUMPS_MONGO_META_MAXINSERTBATCHSIZEBYTES=80000"}
    - { regexp: "^TYK_PMP_PUMPS_MONGO_META_MAXDOCUMENTSIZEBYTES=",    line: "TYK_PMP_PUMPS_MONGO_META_MAXDOCUMENTSIZEBYTES=20112"}
    - { regexp: "^TYK_PMP_PUMPS_MONGOAGG_TYPE=",                      line: "TYK_PMP_PUMPS_MONGOAGG_TYPE=mongo-pump-aggregate"}
    - { regexp: "^TYK_PMP_PUMPS_MONGOAGG_META_MONGOURL=",             line: "TYK_PMP_PUMPS_MONGOAGG_META_MONGOURL=mongodb://tyk-mongo:27017/tyk_analytics"}
    - { regexp: "^TYK_PMP_PUMPS_MONGOAGG_META_USEMIXEDCOLLECTION=",   line: "TYK_PMP_PUMPS_MONGOAGG_META_USEMIXEDCOLLECTION=true"}
    - { regexp: "^TYK_PMP_UPTIMEPUMPCONFIG_COLLECTIONNAME=",          line: "TYK_PMP_UPTIMEPUMPCONFIG_COLLECTIONNAME=tyk_uptime_analytics"}
    - { regexp: "^TYK_PMP_UPTIMEPUMPCONFIG_MONGOURL=",                line: "TYK_PMP_UPTIMEPUMPCONFIG_MONGOURL=mongodb://tyk-mongo:27017/tyk_analytics"}
    - { regexp: "^TYK_PMP_UPTIMEPUMPCONFIG_MAXINSERTBATCHSIZEBYTES=", line: "TYK_PMP_UPTIMEPUMPCONFIG_MAXINSERTBATCHSIZEBYTES=500000"}
    - { regexp: "^TYK_PMP_UPTIMEPUMPCONFIG_MAXDOCUMENTSIZEBYTES=",    line: "TYK_PMP_UPTIMEPUMPCONFIG_MAXDOCUMENTSIZEBYTES=200000"}
    - { regexp: "^TYK_PMP_DONTPURGEUPTIMEDATA=",                      line: "TYK_PMP_DONTPURGEUPTIMEDATA=false"}

- name: Enable tyk-pump
  service:
    name: tyk-pump
    state: started
    enabled: yes
